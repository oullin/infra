name: VPS

on:
    push:
        branches:
            - main
    pull_request:
        branches:
            - main

jobs:
    deployment:
        strategy:
            matrix:
                os: [ubuntu-24.04]

        runs-on: ${{ matrix.os }}

        steps:
            - name: Checkout Repository
              uses: actions/checkout@v4

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Build with Makefile
              run: |
                  touch .env
                  make build
              env:
                  DOCKER_BINARY_NAME: ${{ secrets.DOCKER_BINARY_NAME }}
                  DOCKER_INFRA_USER: ${{ secrets.DOCKER_INFRA_USER }}
                  DOCKER_INFRA_GROUP: ${{ secrets.DOCKER_INFRA_GROUP }}

            - name: Find and Verify Build Artifact
              id: find_binary # Give the step an ID to reference its outputs
              run: |
                  echo "Listing contents of the ./bin directory to verify the artifact:"
                  ls -la ./bin
                  # Find the executable file, excluding .gitkeep, and handle cases where no file or multiple files are found.
                  BINARY_PATH=$(find ./bin -type f -executable -not -name ".gitkeep")
                  if [ -z "$BINARY_PATH" ]; then
                    echo "::error::No executable binary found in ./bin directory."
                    exit 1
                  elif [ $(echo "$BINARY_PATH" | wc -l) -ne 1 ]; then
                    echo "::error::Multiple executable binaries found in ./bin directory. Please ensure only one exists."
                    echo "$BINARY_PATH"
                    exit 1
                  fi
                  echo "Found binary: $BINARY_PATH"
                  # Set the found path as an output for this step.
                  echo "path=$BINARY_PATH" >> $GITHUB_OUTPUT

            - name: Copy binary to VPS
              uses: appleboy/scp-action@v1.0.0
              with:
                  host: ${{ secrets.HOSTINGER_HOST }}
                  username: ${{ secrets.HOSTINGER_USERNAME }}
                  key: ${{ secrets.HOSTINGER_SSH_KEY }}
                  port: ${{ secrets.HOSTINGER_SSH_PORT }}
                  source: "${{ steps.find_binary.outputs.path }}" # Use the path from the previous step's output
                  target: "${{ secrets.HOSTINGER_TARGET_DIR }}/"

            - name: SSH and Restart Application
              uses: appleboy/ssh-action@v1.0.0
              with:
                  host: ${{ secrets.HOSTINGER_HOST }}
                  username: ${{ secrets.HOSTINGER_USERNAME }}
                  key: ${{ secrets.HOSTINGER_SSH_KEY }}
                  port: ${{ secrets.HOSTINGER_PORT }}
                  script: |
                    set -e
                    cd ${{ secrets.HOSTINGER_TARGET_DIR }}
                    echo "--- Verifying location on remote server ---"
                    echo "Current directory: $(pwd)"
                    echo "--- Listing contents of target directory on server BEFORE move:"
                    ls -la
                    SOURCE_FILENAME=$(basename "${{ steps.find_binary.outputs.path }}")
                    FINAL_BINARY_NAME="${{ secrets.DOCKER_BINARY_NAME }}"
                    echo "--- Attempting to rename '$SOURCE_FILENAME' to '$FINAL_BINARY_NAME'"
                    mv -f "$SOURCE_FILENAME" "$FINAL_BINARY_NAME"
                    ls -la
                    chmod +x "$FINAL_BINARY_NAME"
                    sudo systemctl restart ${{ secrets.API_SUPERVISOR }}
                    sudo systemctl status ${{ secrets.API_SUPER-VISOR }}
