name: Deploy to Hostinger VPS

on:
    push:
        branches:
            - main
    pull_request:
        branches:
            - main

jobs:
    build-and-deploy:
        strategy:
            matrix:
                os: [ubuntu-24.04]

        runs-on: ${{ matrix.os }}

        steps:
            - name: Checkout Repository
              uses: actions/checkout@v4

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Build with Docker Compose
              run: |
                  touch .env
                  make build

              env:
                  DOCKER_BINARY_NAME: ${{ secrets.DOCKER_BINARY_NAME }}
                  DOCKER_INFRA_USER: ${{ secrets.DOCKER_INFRA_USER }}
                  DOCKER_INFRA_GROUP: ${{ secrets.DOCKER_INFRA_GROUP }}

            - name: Extract Binary from Image
              run: |
                  docker create --name temp_container oullin/infra-builder
                  docker cp temp_container:/app/bin/${{ secrets.BINARY_NAME }} .
                  docker rm temp_container

            - name: Copy binary to Hostinger VPS
              uses: appleboy/scp-action@v1.0.0
              with:
                  host: ${{ secrets.HOSTINGER_HOST }}
                  username: ${{ secrets.HOSTINGER_USERNAME }}
                  key: ${{ secrets.HOSTINGER_SSH_KEY }}
                  port: ${{ secrets.HOSTINGER_PORT }}
                  source: "${{ secrets.BINARY_NAME }}"
                  target: "${{ secrets.HOSTINGER_TARGET_DIR }}/" # Target directory on the VPS

            - name: SSH and Restart Application
              uses: appleboy/ssh-action@v1.0.0
              with:
                  host: ${{ secrets.HOSTINGER_HOST }}
                  username: ${{ secrets.HOSTINGER_USERNAME }}
                  key: ${{ secrets.HOSTINGER_SSH_KEY }}
                  port: ${{ secrets.HOSTINGER_PORT }}
                  script: |
                      cd ${{ secrets.HOSTINGER_TARGET_DIR }}
                      chmod +x ${{ secrets.DOCKER_BINARY_NAME }}
                      sudo systemctl restart ${{ secrets.API_SUPERVISOR }}
                      sudo systemctl status ${{ secrets.API_SUPERVISOR }}
